<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	 xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx.xsd">
	        <bean id="dataSource"
              class="com.mchange.v2.c3p0.ComboPooledDataSource"
              destroy-method="close">
            <property name="driverClass">
                <value>com.mysql.jdbc.Driver</value>
            </property>
            <property name="jdbcUrl">
                <value>jdbc:mysql://localhost:3306/foo?useUnicode=true&amp;characterEncoding=utf8</value>
            </property>
            <!--MySQL数据库的用户名 -->
            <property name="user">
                <value>root</value>
            </property>
            <!--MySQL数据库 密码 -->
            <property name="password">
                <value>root</value>
            </property>
            <!--连接池中保留的最小连接数。-->
            <property name="minPoolSize">
                <value>5</value>
            </property>
            <!--连接池中保留的最大连接数。Default: 15 -->
            <property name="maxPoolSize">
                <value>200</value>
            </property>
            <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
            <property name="initialPoolSize">
                <value>10</value>
            </property>
            <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
            <property name="maxIdleTime">
                <value>60</value>
            </property>
            <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
            <property name="acquireIncrement">
                <value>5</value>
            </property>
            <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的
            statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面
            的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
            <property name="maxStatements">
                <value>0</value>
            </property>
            <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
            <property name="idleConnectionTestPeriod">
                <value>60</value>
            </property>
            <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
            <property name="acquireRetryAttempts">
                <value>30</value>
            </property>
            <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
            保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
            获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
            <property name="breakAfterAcquireFailure">
                <value>true</value>
            </property>
            <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
                    时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
                    等方法来提升连接测试的性能。Default: false -->
            <property name="testConnectionOnCheckout">
                <value>false</value>
            </property>
        </bean>
	<!-- spring管理事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Spring的声明式事务管理 -->
	<!-- 设置与事务有关的各种属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<!-- 声明切入点 -->
	<aop:config>
		<aop:pointcut id="txPointCuts"
			expression="execution(* com.yzx.test.dao.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCuts" />
	</aop:config>
</beans>